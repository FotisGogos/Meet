{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","WelcomeScreen.jsx","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","handleClick","setState","event","this","props","className","summary","start","dateTime","end","location","Button","variant","onClick","href","htmlLink","rel","target","description","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","position","bottom","right","ErrorAlert","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","locations","filter","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","display","NumberOfEvents","errorText","numberOfEvents","e","updateNumberOfEvents","WelcomeScreen","showWelcomeScreen","align","class","src","alt","getAccessToken","mockData","JSON","parse","stringify","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getEvents","NProgress","startsWith","done","navigator","onLine","data","getItem","token","url","axios","get","extractLocations","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","Set","App","currentLocation","eventcount","eventsToShow","slice","mounted","eventCount","isTokenValid","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.869dd439.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button'\n\nclass Event extends Component {\n  state = {\n    collapsed:  true,\n  }\n\n  handleClick = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  render() {\n    const  { event }  = this.props;\n    const { collapsed } = this.state;\n    return (\n      <div className=\"event\">\n         <h2 className=\"summary\">{event.summary}</h2>\n         <p className=\"start-date\">\n          {event.start.dateTime}\n        </p>\n        <p className=\"end-date\">\n          {event.end.dateTime}\n        </p>\n        <p className=\"location\">\n          {event.location}\n        </p>\n        \n        <Button variant=\"outline-info\"\n          className={`${collapsed ? \"show\" : \"hide\"}-details-btn`}\n          onClick={this.handleClick}\n        >\n          {collapsed ? \"Show Details\" : \"Hide Details\"}\n        </Button>\n        {!collapsed && (\n                <div className=\"extra-details\">\n                <h2 className=\"details-header\">About event:</h2>\n            <a href={event.htmlLink} className='details-link' rel=\"noreferrer\" target='_blank'>See details on Google Calendar</a>\n            <p className='event-description'>{event.description}</p>\n           </div>\n            )}\n        </div>\n\n    )\n  }\n}\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map(event =>\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n\n\n\nexport default EventList;","import React,  { Component } from 'react'\n\n\nclass Alert  extends Component {\n  constructor(props){\n    super(props)\n    this.color = null; \n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  }\n\n  render () {\n    return (\n      <div className =\"Alert\">\n        <p style={this.getStyle()} className=\"error-text\">{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'blue';\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n      position: 'relative',\n      bottom: '20px',\n      right: '60px'\n    };\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n      position: 'absolute',\n      bottom: '-115px'\n    };\n  }\n}\n\nexport { InfoAlert,ErrorAlert };","import React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\n\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({showSuggestions:true});\n    const suggestions = this.props.locations.filter((location) => {\n        return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if(suggestions.length === 0) {\n        this.setState({ \n        query: value,\n        infoText: 'We can not find the city you are looking for. Please try another city.',\n    });\n} else {\n    return this.setState({\n        query: value,\n        suggestions,\n        infoText:'',\n        showSuggestions:false\n    });\n}\n};\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n        query: suggestion,\n        showSuggestions: false,\n        infoText: ''\n    });\n\n    this.props.updateEvents(suggestion);\n};\n\n  render() {\n    return (\n      <div className=\"CitySearch\"> \n        <InfoAlert text={this.state.infoText} />\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li key={suggestion}\n                onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li \n          onClick={() => this.handleItemClicked(\"all\")}\n          >\n            \n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nimport { ErrorAlert } from './Alert';\n\n\nclass NumberOfEvents extends Component {\n      \n  render() {\n    return (\n      <div className=\"NumberOfEvents\">\n       <ErrorAlert text={this.props.errorText} />\n        <p>Number of events</p>\n        <input\n          type=\"number\"\n          className=\"newNumber\"\n          value={this.props.numberOfEvents}\n          onChange={(e) => this.props.updateNumberOfEvents(e)}\n        />\n        \n\n      </div>\n    )\n  };\n}\n\nexport default NumberOfEvents;\n\n\n\n\n","import React from \"react\";\nimport \"./WelcomeScreen.css\";\n\nfunction WelcomeScreen(props) {\n  return props.showWelcomeScreen ? (\n    <div className=\"WelcomeScreen\">\n      <h1>Welcome to the Meet app</h1>\n      <h4>\n        Log in to see upcoming events around the world for full-stack developers\n      </h4>\n      <div className=\"button_cont\" align=\"center\">\n        <div class=\"google-btn\">\n          <div class=\"google-icon-wrapper\">\n            <img\n              class=\"google-icon\"\n              src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n              alt=\"Google sign-in\"\n            />\n          </div>\n          <button\n            onClick={() => {\n              props.getAccessToken();\n            }}\n            rel=\"nofollow noopener\"\n            class=\"btn-text\"\n          >\n            <b>Sign in with google</b>\n          </button>\n        </div>\n      </div>\n      <a\n        href=\"https://FotisGogos.github.io/meet/privacy.html\"\n        rel=\"nofollow noopener\"\n      >\n        Privacy policy\n      </a>\n    </div>\n  ) : null;\n}\nexport default WelcomeScreen;\n","const mockDataJSON = [\n  {\n      \"kind\": \"calendar#event\",\n      \"etag\": \"\\\"3181161784712000\\\"\",\n      \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n      \"status\": \"confirmed\",\n      \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n      \"created\": \"2020-05-19T19:17:46.000Z\",\n      \"updated\": \"2020-05-27T12:01:32.356Z\",\n      \"summary\": \"Learn JavaScript\",\n      \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n      \"location\": \"London, UK\",\n      \"creator\": {\n       \"email\": \"fullstackwebdev@careerfoundry.com\",\n       \"self\": true\n      },\n      \"organizer\": {\n       \"email\": \"fullstackwebdev@careerfoundry.com\",\n       \"self\": true\n      },\n      \"start\": {\n       \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"end\": {\n       \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n      \"originalStartTime\": {\n       \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n      \"sequence\": 0,\n      \"reminders\": {\n       \"useDefault\": true\n      },\n      \"eventType\": \"default\"\n     },\n     {\n      \"kind\": \"calendar#event\",\n      \"etag\": \"\\\"3181159875584000\\\"\",\n      \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n      \"status\": \"confirmed\",\n      \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n      \"created\": \"2020-05-19T19:14:30.000Z\",\n      \"updated\": \"2020-05-27T11:45:37.792Z\",\n      \"summary\": \"React is Fun\",\n      \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n      \"location\": \"Berlin, Germany\",\n      \"creator\": {\n       \"email\": \"fullstackwebdev@careerfoundry.com\",\n       \"self\": true\n      },\n      \"organizer\": {\n       \"email\": \"fullstackwebdev@careerfoundry.com\",\n       \"self\": true\n      },\n      \"start\": {\n       \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"end\": {\n       \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n      \"originalStartTime\": {\n       \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n      \"sequence\": 0,\n      \"reminders\": {\n       \"useDefault\": true\n      },\n      \"eventType\": \"default\"\n     }\n\n\n\n]\n     const mockData = JSON.parse(JSON.stringify(mockDataJSON));\n     export { mockData };","/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\n import { mockData } from './mock-data';\n import axios from 'axios';\n import NProgress from 'nprogress';\n \n export const checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://qrgw0n6hx1.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\n export const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith('http://localhost')) {\n      NProgress.done();\n      return mockData;\n  }\n\n  if (!navigator.onLine) {\n    const data = localStorage.getItem(\"lastEvents\");\n    NProgress.done();\n    return data?JSON.parse(data).events:[];;\n  }\n\n\n  const token = await getAccessToken();\n  if (token) {\n    removeQuery();\n    const url = ' https://qrgw0n6hx1.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      \n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://qrgw0n6hx1.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}\n\n export const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};","import React, {Component}  from 'react';\nimport './App.css';\nimport './nprogress.css';\n\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport WelcomeScreen from './WelcomeScreen';\n\nimport { extractLocations, getEvents, checkToken, getAccessToken } from './api';\n\n\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    showWelcomeScreen: undefined,\n    numberOfEvents: 32,\n    currentLocation: \"all\",\n    errorText: ''\n  }\n\n\n  async componentDidMount() {\n    this.mounted = true;\n    const accessToken = localStorage.getItem('access_token');\n    const isTokenValid = (await checkToken(accessToken)).error ? false :\n    true;\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\n    if ((code || isTokenValid) && this.mounted) {\n      getEvents().then((events) => {\n        if (this.mounted) {\n          this.setState({ events, locations: extractLocations(events) });\n        }\n      });\n    }\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  updateEvents = (location,eventcount) => {\n    getEvents(eventcount).then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n        const eventsToShow = locationEvents.slice(0, this.state.numberOfEvents);\n        if (this.mounted) {\n          this.setState({\n            events: eventsToShow,\n            currentLocation: location,\n          });\n        }\n    });\n  }\n\n  \n\n  updateNumberOfEvents = (eventCount) => {\n    const value = eventCount.target.value;\n    if (value > 32) {\n      this.setState({\n        numberOfEvents: 32,\n        errorText: 'Please select a number from 1 to 32'\n      });\n    } else {\n      this.setState({\n        numberOfEvents: value,\n        errorText: ''\n      });\n    }\n    const { currentLocation } = this.state;\n    this.updateEvents(currentLocation, eventCount);\n    };\n\n  render() {\n    if (this.state.showWelcomeScreen === undefined) return <div\n        className=\"App\" />\n    return (\n      <div className=\"App\">\n       \n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents}/>\n        <EventList events={this.state.events} />\n        <NumberOfEvents \n           numberOfEvents={this.state.numberOfEvents}\n           updateNumberOfEvents={this.updateNumberOfEvents}\n           errorText ={this.state.errorText}\n          />\n          <WelcomeScreen showWelcomeScreen={this.state.showWelcomeScreen}\n            getAccessToken={() => { getAccessToken() }} />\n      </div>\n    );\n  }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n//Atatus \n\nimport reportWebVitals from './reportWebVitals';\n\n//Initialize atatus to monitor\nimport * as atatus from 'atatus-spa';\natatus.config('48f0c6b01391435988e8badbff761355').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}