{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","handleClick","setState","event","this","props","className","summary","start","dateTime","end","location","Button","variant","onClick","href","htmlLink","rel","target","description","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","locations","filter","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","e","updateNumberOfEvents","mockData","JSON","parse","stringify","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getEvents","NProgress","startsWith","done","getAccessToken","token","url","axios","get","data","extractLocations","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","Set","App","currentLocation","eventcount","eventsToShow","slice","mounted","eventCount","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.b0fcb6bd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button'\n\nclass Event extends Component {\n  state = {\n    collapsed:  true,\n  }\n\n  handleClick = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  render() {\n    const  { event }  = this.props;\n    const { collapsed } = this.state;\n    return (\n      <div className=\"event\">\n         <h2 className=\"summary\">{event.summary}</h2>\n         <p className=\"start-date\">\n          {event.start.dateTime}\n        </p>\n        <p className=\"end-date\">\n          {event.end.dateTime}\n        </p>\n        <p className=\"location\">\n          {event.location}\n        </p>\n        \n        <Button variant=\"outline-info\"\n          className={`${collapsed ? \"show\" : \"hide\"}-details-btn`}\n          onClick={this.handleClick}\n        >\n          {collapsed ? \"Show Details\" : \"Hide Details\"}\n        </Button>\n        {!collapsed && (\n                <div className=\"extra-details\">\n                <h2 className=\"details-header\">About event:</h2>\n            <a href={event.htmlLink} className='details-link' rel=\"noreferrer\" target='_blank'>See details on Google Calendar</a>\n            <p className='event-description'>{event.description}</p>\n           </div>\n            )}\n        </div>\n\n    )\n  }\n}\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map(event =>\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n\n\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n        return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if(suggestions.length === 0) {\n        this.setState({ \n        query: value,\n        infoText: 'We can not find the city you are looking for. Please try another city.',\n        showSuggestions: false\n    });\n} else {\n    return this.setState({\n        query: value,\n        suggestions,\n        infoText:'',\n        showSuggestions: true\n    });\n}\n};\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n        query: suggestion,\n        showSuggestions: false,\n        infoText: ''\n    });\n\n    this.props.updateEvents(suggestion);\n};\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n          \n          {this.state.suggestions.map((suggestion) => (\n            <li key={suggestion}\n                onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li \n          onClick={() => this.handleItemClicked(\"all\")}\n          >\n            \n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n      \n  render() {\n    return (\n      <div className=\"NumberOfEvents\">\n        <p>Number of events</p>\n        <input\n          type=\"number\"\n          className=\"newNumber\"\n          value={this.props.numberOfEvents}\n          onChange={(e) => this.props.updateNumberOfEvents(e)}\n        />\n      </div>\n    )\n  };\n}\n\nexport default NumberOfEvents;\n\n\n\n\n","const mockDataJSON = [\n  {\n      \"kind\": \"calendar#event\",\n      \"etag\": \"\\\"3181161784712000\\\"\",\n      \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n      \"status\": \"confirmed\",\n      \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n      \"created\": \"2020-05-19T19:17:46.000Z\",\n      \"updated\": \"2020-05-27T12:01:32.356Z\",\n      \"summary\": \"Learn JavaScript\",\n      \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n      \"location\": \"London, UK\",\n      \"creator\": {\n       \"email\": \"fullstackwebdev@careerfoundry.com\",\n       \"self\": true\n      },\n      \"organizer\": {\n       \"email\": \"fullstackwebdev@careerfoundry.com\",\n       \"self\": true\n      },\n      \"start\": {\n       \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"end\": {\n       \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n      \"originalStartTime\": {\n       \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n      \"sequence\": 0,\n      \"reminders\": {\n       \"useDefault\": true\n      },\n      \"eventType\": \"default\"\n     },\n     {\n      \"kind\": \"calendar#event\",\n      \"etag\": \"\\\"3181159875584000\\\"\",\n      \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n      \"status\": \"confirmed\",\n      \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n      \"created\": \"2020-05-19T19:14:30.000Z\",\n      \"updated\": \"2020-05-27T11:45:37.792Z\",\n      \"summary\": \"React is Fun\",\n      \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n      \"location\": \"Berlin, Germany\",\n      \"creator\": {\n       \"email\": \"fullstackwebdev@careerfoundry.com\",\n       \"self\": true\n      },\n      \"organizer\": {\n       \"email\": \"fullstackwebdev@careerfoundry.com\",\n       \"self\": true\n      },\n      \"start\": {\n       \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"end\": {\n       \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n      \"originalStartTime\": {\n       \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n      \"sequence\": 0,\n      \"reminders\": {\n       \"useDefault\": true\n      },\n      \"eventType\": \"default\"\n     }\n\n\n\n]\n     const mockData = JSON.parse(JSON.stringify(mockDataJSON));\n     export { mockData };","/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\n import { mockData } from './mock-data';\n import axios from 'axios';\n import NProgress from 'nprogress';\n \n\n\n\n\n const checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://qrgw0n6hx1.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\n export const getEvents = async () => {\n\n  NProgress.start();\n\n  if (window.location.href.startsWith('http://localhost')) {\n      NProgress.done();\n      return mockData;\n\n  }\n\n  const token = await getAccessToken();\n  if (token) {\n    removeQuery();\n    const url = ' https://qrgw0n6hx1.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      \n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://qrgw0n6hx1.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}\n\n export const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};","import React, {Component}  from 'react';\nimport './App.css';\nimport './nprogress.css';\n\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\n\n\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    currentLocation: \"all\"\n  }\n\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ \n          events: events.slice(0, this.state.numberOfEvents),\n          locations: extractLocations(events) \n        });\n      }\n    });\n  } \n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  updateEvents = (location,eventcount) => {\n    getEvents(eventcount).then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n        const eventsToShow = locationEvents.slice(0, this.state.numberOfEvents);\n        if (this.mounted) {\n          this.setState({\n            events: eventsToShow,\n            currentLocation: location,\n          });\n        }\n    });\n  }\n\n  \n\n  updateNumberOfEvents = (eventCount) => {\n    const value = eventCount.target.value;\n    this.setState({\n    numberOfEvents: value\n    });\n    const { currentLocation } = this.state;\n    this.updateEvents(currentLocation, eventCount);\n    };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents}/>\n        <EventList events={this.state.events} />\n        <NumberOfEvents \n           numberOfEvents={this.state.numberOfEvents}\n           updateNumberOfEvents={this.updateNumberOfEvents}\n          />\n      </div>\n    );\n  }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n//Atatus \n\nimport reportWebVitals from './reportWebVitals';\n\n//Initialize atatus to monitor\nimport * as atatus from 'atatus-spa';\natatus.config('48f0c6b01391435988e8badbff761355').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}